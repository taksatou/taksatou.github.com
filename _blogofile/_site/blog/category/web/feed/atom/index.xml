<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">mojavy.com</title>
  <subtitle type="text"></subtitle>

  <updated>2012-11-20T02:30:00Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://mojavy.com/blog" />
  <id>http://mojavy.com/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://mojavy.com/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[ウェブエンジニアのためのオンラインツールまとめ]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2012/11/20/web-engineers-online-toolbox/" />
    <id>http://mojavy.com/blog/2012/11/20/web-engineers-online-toolbox/</id>
    <updated>2012-11-20T02:30:00Z</updated>
    <published>2012-11-20T02:30:00Z</published>
    <category scheme="http://mojavy.com/blog" term="web" />
    <category scheme="http://mojavy.com/blog" term="tips" />
    <summary type="html"><![CDATA[ウェブエンジニアのためのオンラインツールまとめ]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2012/11/20/web-engineers-online-toolbox/"><![CDATA[<p><img alt="tool" src="/images/tool-logo.png" /></p>
<p><a href="http://ivanzuzak.info/2012/11/18/the-web-engineers-online-toolbox.html">The Web engineer's online toolbox</a>というまとめ記事が便利そうだったので、実際に試しつつ抄訳してみました。(一部のコメントと体裁は変えています。)</p>
<h2 id="_1">目次</h2>
<div class="toc">
<ul>
<li><a href="#_1">目次</a></li>
<li><a href="#_2">一覧</a><ul>
<li><a href="#requestbin">RequestBin</a></li>
<li><a href="#hurl">Hurl</a></li>
<li><a href="#httpbin">httpbin</a></li>
<li><a href="#redbot">REDbot</a></li>
<li><a href="#webgun">WebGun</a></li>
<li><a href="#apify">Apify</a></li>
<li><a href="#unicorn">Unicorn</a></li>
<li><a href="#feed-validator">Feed validator</a></li>
<li><a href="#link-checker">Link checker</a></li>
<li><a href="#host-tracker">Host tracker</a></li>
<li><a href="#pingdom-full-page-test">Pingdom Full page test</a></li>
<li><a href="#har-viewer">HAR viewer</a></li>
<li><a href="#cors-proxy">CORS proxy</a></li>
<li><a href="#browserling">Browserling</a></li>
<li><a href="#websocket-echo-test">WebSocket Echo Test</a></li>
<li><a href="#yql">YQL</a></li>
<li><a href="#yahoo-pipes">Yahoo Pipes</a></li>
<li><a href="#apiary">Apiary</a></li>
</ul>
</li>
<li><a href="#_3">おわりに</a></li>
</ul>
</div>
<h2 id="_2">一覧</h2>
<h3 id="requestbin"><a href="http://requestb.in/">RequestBin</a></h3>
<p>httpリクエストを保存するエンドポイントを作ってくれる。</p>
<p>Create a RequestBin のボタンをクリックするとURLが表示されるので、そこをHTTPクライアントからたたくとRequestBin側にリクエスト内容が記録される。
ソースも公開されてるのでローカルで立ちあげることもできる。</p>
<p>githubの<a href="https://help.github.com/articles/testing-webhooks">webhookのhelp</a>も参考にどうぞ。</p>
<h3 id="hurl"><a href="http://hurl.it">Hurl</a></h3>
<p>httpリクエストを実行してくれる。パーマリンクも作ってくれるので、POSTリクエストもコピペで他の人と共有できる。</p>
<ul>
<li>類似サービス: <a href="http://resttesttest.com/">REST test test</a> ,  <a href="https://apigee.com/console/others">Apigee console</a> </li>
</ul>
<h3 id="httpbin"><a href="http://httpbin.org/">httpbin</a></h3>
<p>HTTPリクエスト側でレスポンスのHTTP status codeやレスポンスやリダイレクト、cookieなどを制御できる。HTTPクライアントのテストに便利。</p>
<ul>
<li>類似サービス: <a href="http://ivanzuzak.info/urlecho/">UrlEcho</a></li>
</ul>
<h3 id="redbot"><a href="http://redbot.org/">REDbot</a></h3>
<p>HTTPのリソースをチェックしてくれる。問題を検出したら改善案のサジェストもしてくれる。</p>
<ul>
<li>類似サービス: <a href="http://zamez.org/httplint">HTTP lint</a></li>
</ul>
<h3 id="webgun"><a href="http://webgun.io/">WebGun</a></h3>
<p>webhookを簡単に作るためのAPIを提供している。現在はまだベータっぽい。</p>
<h3 id="apify"><a href="http://apify.heroku.com">Apify</a></h3>
<p>ウェブページをスクレイピングしてJSON API化してくれる。
CSSセレクタかxpathに名前をつけて設定するだけでよしなにやってくれる。</p>
<p><a href="http://apify.heroku.com/resources/50a99278a7301c000200005a">試しに元記事をAPI化してみた</a></p>
<h3 id="unicorn"><a href="http://validator.w3.org/unicorn/">Unicorn</a></h3>
<p>前述の<a href="http://redbot.org/">REDbot</a>はHTTPをチェックしてくれるけど、こちらはHTMLドキュメントがW3Cに準拠してるかをバリデートしてくれる。</p>
<ul>
<li>類似サービス: <a href="http://lint.brihten.com/html/">HTML lint</a></li>
</ul>
<h3 id="feed-validator"><a href="http://validator.w3.org/feed/">Feed validator</a></h3>
<p>こちらはRSSとATOMフィードをバリデートしてくれる。</p>
<h3 id="link-checker"><a href="http://validator.w3.org/checklink">Link checker</a></h3>
<p>リンクを再帰的にたどって、重複やリンク切れをチェックしてくれる。</p>
<h3 id="host-tracker"><a href="http://www.host-tracker.com/">Host tracker</a></h3>
<p>ウェブサイトのモニタリングサービス。定期的にpingして、問題があった場合はメール通知してくれる。</p>
<ul>
<li>類似サービス: <a href="http://www.downforeveryoneorjustme.com/">Down for everyone or just me</a>, <a href="http://tools.pingdom.com/ping/">Pimgdom ping service</a></li>
</ul>
<h3 id="pingdom-full-page-test"><a href="http://tools.pingdom.com/fpt/">Pingdom Full page test</a></h3>
<p>ウェブページのロード時間を計測、解析してくれる。リクエストを実行するサーバは米国しかないので国内だとちょっと使いづらい。
類似サービスの<a href="http://www.webpagetest.org/">Web page test</a>ならTokyoが選べる。</p>
<h3 id="har-viewer"><a href="http://www.softwareishard.com/har/viewer/">HAR viewer</a></h3>
<p>HTTP tracking toolsで生成されたHTTP Archive (HAR)形式のログをビジュアライズしてくれる。</p>
<h3 id="cors-proxy"><a href="http://www.corsproxy.com/">CORS proxy</a></h3>
<p>クロスドメインでjsを実行できるようにヘッダを追加してレスポンスしてくれるプロキシ。</p>
<h3 id="browserling"><a href="https://browserling.com/">Browserling</a></h3>
<p>ブラウザ上で動くインタラクティブなクロスブラウザ。メジャーなブラウザは大体サポートされている。
動作は重いけど表示確認くらいになら無料のままでも使えそう。</p>
<h3 id="websocket-echo-test"><a href="http://www.websocket.org/echo.html">WebSocket Echo Test</a></h3>
<p>WebSocketをテストできるエコーサーバ。</p>
<h3 id="yql"><a href="http://developer.yahoo.com/yql/">YQL</a></h3>
<p>ウェブサービスからとってきたデータをSQLっぽい言語で整形できる。</p>
<h3 id="yahoo-pipes"><a href="http://pipes.yahoo.com/pipes/">Yahoo Pipes</a></h3>
<p>ウェブサービスをGUIでマッシュアップできる。</p>
<h3 id="apiary"><a href="http://apiary.io/">Apiary</a></h3>
<p>良い感じのREST APIドキュメントをインタラクティブなインスペクタをつかってジェネレートできる。まだベータ。</p>
<ul>
<li>類似サービス: <a href="http://swagger.wordnik.com/">Swagger</a></li>
</ul>
<h2 id="_3">おわりに</h2>
<ul>
<li>いくつかのツールはサーバに負荷をかけてしまう可能性があるので注意してつかってください。</li>
<li>他にもなにかあれば教えてもらえるとうれしいです。</li>
</ul>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[twitter apiで404: {"errors":[{"message":"Sorry, that page does not exist","code":34}]}]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2012/10/18/twitter-api-error/" />
    <id>http://mojavy.com/blog/2012/10/18/twitter-api-error/</id>
    <updated>2012-10-18T22:00:00Z</updated>
    <published>2012-10-18T22:00:00Z</published>
    <category scheme="http://mojavy.com/blog" term="web" />
    <category scheme="http://mojavy.com/blog" term="twitter" />
    <summary type="html"><![CDATA[twitter apiで404: {"errors":[{"message":"Sorry, that page does not exist","code":34}]}]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2012/10/18/twitter-api-error/"><![CDATA[<p><img alt="twitter" src="/images/twitter-logo.png" /></p>
<p>最近twitter apiをつかっているサービスで以下のようなエラーがでた。</p>
<div class="pygments_borland"><pre><span class="p">{</span><span class="s2">&quot;errors&quot;</span><span class="o">:</span><span class="p">[{</span><span class="s2">&quot;message&quot;</span><span class="o">:</span><span class="s2">&quot;Sorry, that page does not exist&quot;</span><span class="p">,</span><span class="s2">&quot;code&quot;</span><span class="o">:</span><span class="mi">34</span><span class="p">}]}</span>
</pre></div>

<p><a href="https://dev.twitter.com/discussions/11595">twitterのデベロッパフォーラム</a>によると、先週くらいにバージョンがついてないエンドポイントは /oauth を除いて廃止されたらしい。また、ドメインもapi.twitter.comに統一されたらしい。</p>
<p>つまり、api.twitter.com/account/verify_credentials.json とか twitter.com/1/account/verify_credentials.json とか twitter.com/account/verify_credentials.json ではだめで、api.twitter.com/1/account/verify_credentials.json を使えということ。</p>
<p>ログイン直後にverify_credentialsをつかってるアプリは多いと思われるが、その場合ログインに失敗したように見えるので認証まわりをライブラリ任せにしてると原因がわかりにくいかも。</p>
<p>とりあえず<a href="https://dev.twitter.com/blog">twitterの開発ブログ</a>まめにチェックしたほうがよさそう。</p>
<h1 id="_1">参考</h1>
<ul>
<li><a href="https://dev.twitter.com/blog">https://dev.twitter.com/blog</a></li>
<li><a href="https://dev.twitter.com/discussions/11595">https://dev.twitter.com/discussions/11595</a></li>
</ul>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[ワンライナーでウェブサーバを起動する方法]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2012/07/18/one-line-webserver/" />
    <id>http://mojavy.com/blog/2012/07/18/one-line-webserver/</id>
    <updated>2012-07-18T12:30:00Z</updated>
    <published>2012-07-18T12:30:00Z</published>
    <category scheme="http://mojavy.com/blog" term="python" />
    <category scheme="http://mojavy.com/blog" term="web" />
    <category scheme="http://mojavy.com/blog" term="ruby" />
    <summary type="html"><![CDATA[ワンライナーでウェブサーバを起動する方法]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2012/07/18/one-line-webserver/"><![CDATA[<p><img alt="ruby" src="/images/ruby-logo.png" /></p>
<p>とりあえずウェブサーバがたちあがりさえすればいいときは、pythonのSimpleHTTPServerを使うのが便利です。
起動したカレントディレクトリ以下のファイルをブラウズできるので、テスト用のスタティックなスタブデータを一時的に配置したいときとかにも使えます。最近の一般的なlinuxディストリビューションであればデフォルトではいってるpythonで使えると思います。</p>
<div class="pygments_borland"><pre><span class="nv">$ </span>python -mSimpleHTTPServer 3333
</pre></div>

<p>デフォルトポートは8000ですが、引数で指定することもできます。
<br>
ちなみにrubyでもwebrickを使って同様のことができますが、<a href="http://d.hatena.ne.jp/rx7/20090812/p1">こちら</a> で紹介されているwebrickのワンライナーは長すぎて覚えられないのでいつもpythonを使ってます。
<br>
<br>
でもリクエストに応じたロジックを入れたい場合はrubyのsinatraの方が便利です。</p>
<div class="pygments_borland"><pre><span class="nv">$ </span>ruby -rsinatra -e <span class="s1">&#39;get(&quot;/&quot;){sleep 3}&#39;</span>
</pre></div>

<p>ポートを変更する場合は以下のようにします</p>
<div class="pygments_borland"><pre><span class="nv">$ </span>ruby -rsinatra -e <span class="s1">&#39;set :port,3333; get(&quot;/&quot;){sleep 3}&#39;</span>
</pre></div>

<h2 id="_1">参考</h2>
<ul>
<li><a href="http://d.hatena.ne.jp/rx7/20090812/p1">コマンド1つで今すぐWebサーバを起動させるためのワンライナー(Ruby or Python)</a></li>
</ul>]]></content>
  </entry>
</feed>
