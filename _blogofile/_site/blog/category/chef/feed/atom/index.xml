<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">mojavy.com</title>
  <subtitle type="text"></subtitle>

  <updated>2013-09-10T19:39:49Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://mojavy.com/blog" />
  <id>http://mojavy.com/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://mojavy.com/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[debianパッケージをchefで削除する場合はpurgeを使う方がよい]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2013/09/10/chef-purge-package/" />
    <id>http://mojavy.com/blog/2013/09/10/chef-purge-package/</id>
    <updated>2013-09-10T19:39:49Z</updated>
    <published>2013-09-10T19:39:49Z</published>
    <category scheme="http://mojavy.com/blog" term="chef" />
    <category scheme="http://mojavy.com/blog" term="ruby" />
    <category scheme="http://mojavy.com/blog" term="debian" />
    <summary type="html"><![CDATA[debianパッケージをchefで削除する場合はpurgeを使う方がよい]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2013/09/10/chef-purge-package/"><![CDATA[<p>apt-getコマンドにはパッケージを削除するためのコマンドが2種類ある</p>
<ul>
<li>remove: パッケージを削除するが設定ファイルはそのまま残す</li>
<li>purge: パッケージを削除するとき設定ファイルも削除する</li>
</ul>
<p>chefをつかっているということは設定ファイルもchefで管理しているはずなので、設定ファイルを残す必要はない。
さらに、依存で入ったパッケージも一緒に削除されるように、<code>options "--auto-remove"</code>などとしてやるとよい。</p>
<p>ゴミは混乱の元なので早めに消すべし。</p>]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[chef soloでAuthenticationFailedといわれたときの対応]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2013/09/09/chef-solo-ssh-config/" />
    <id>http://mojavy.com/blog/2013/09/09/chef-solo-ssh-config/</id>
    <updated>2013-09-09T20:43:04Z</updated>
    <published>2013-09-09T20:43:04Z</published>
    <category scheme="http://mojavy.com/blog" term="chef" />
    <category scheme="http://mojavy.com/blog" term="ruby" />
    <summary type="html"><![CDATA[chef soloでAuthenticationFailedといわれたときの対応]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2013/09/09/chef-solo-ssh-config/"><![CDATA[<p>公開鍵認証なホストに対してパスフレーズ入力無しでsshログインができるにもかかわらず、</p>
<div class="pygments_murphy"><pre><span class="nv">$ </span>knife solo cook myhost
Running Chef on myhost...
Checking Chef version...
Enter the password <span class="k">for </span>username@myhost:
ERROR: Net::SSH::AuthenticationFailed: username
</pre></div>

<p>のようにいわれてchef soloの実行に失敗してしまうときがある。</p>
<p>パスフレーズ入力無しでsshできたということは、普通は以下のうちの少くとも1つは満たされている。</p>
<ol>
<li>ssh-agentに対象の秘密鍵が登録されている</li>
<li>デフォルトパス($HOME/.ssh/id_rsa とか)に対象のパスフレーズ無し秘密鍵が保存されている</li>
<li>ssh_configでパスフレーズ無し秘密鍵を指定している</li>
</ol>
<p>それなのに<code>AuthenticationFailed</code>失敗してしまうのは、Net:SSHがデフォルトでは公開鍵認証を試行しない場合があるため。 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> 
これを回避するには、ssh_configで<code>PubkeyAuthentication yes</code>を明示すればよい。</p>
<p>なお、<code>Net::SSH</code>がどのような動きをしているかは以下のスニペットを試すとよい。</p>
<div class="pygments_murphy"><pre><span class="nb">require</span> <span class="s1">&#39;net/ssh&#39;</span>
<span class="no">Net</span><span class="o">::</span><span class="no">SSH</span><span class="o">.</span><span class="n">start</span><span class="p">(</span><span class="s2">&quot;myhost&quot;</span><span class="p">,</span> <span class="s2">&quot;username&quot;</span><span class="p">,</span> <span class="ss">:verbose</span> <span class="o">=&gt;</span> <span class="ss">:debug</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">p</span> <span class="n">x</span> <span class="p">}</span>
</pre></div>

<h3 id="_1">備考</h3>
<p>使ったのは以下のバージョン</p>
<ul>
<li>chef: 11.6.0</li>
<li>knife-solo: 0.3.0</li>
</ul>
<div class="footnote">
<hr />
<ol>
<li id="fn:1">
<p>この挙動は<code>knife solo</code>コマンドに<code>-i</code>オプションを渡しても変わらなかった。&#160;<a href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text">&#8617;</a></p>
</li>
</ol>
</div>]]></content>
  </entry>
</feed>
