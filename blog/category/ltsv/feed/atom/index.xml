<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">mojavy.com</title>
  <subtitle type="text"></subtitle>

  <updated>2013-02-18T20:30:00Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://mojavy.com/blog" />
  <id>http://mojavy.com/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://mojavy.com/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[LTSV for Common Lisp 作りました]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2013/02/18/ltsv-for-common-lisp/" />
    <id>http://mojavy.com/blog/2013/02/18/ltsv-for-common-lisp/</id>
    <updated>2013-02-18T20:30:00Z</updated>
    <published>2013-02-18T20:30:00Z</published>
    <category scheme="http://mojavy.com/blog" term="ltsv" />
    <category scheme="http://mojavy.com/blog" term="common lisp" />
    <summary type="html"><![CDATA[LTSV for Common Lisp 作りました]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2013/02/18/ltsv-for-common-lisp/"><![CDATA[<p><img alt="lisp" src="/images/lisp-alien-logo.png" /></p>
<p>すっかりブームは過ぎ去ってしまいましたが、意外とまだなかったのでCommon LispのLTSVパーサつくりました。</p>
<p><a href="https://github.com/taksatou/cl-ltsv">https://github.com/taksatou/cl-ltsv</a></p>
<p><a href="http://ltsv.org/">http://ltsv.org/</a></p>
<h3 id="_1">インストール</h3>
<p>現在(2013-02-18) quicklisp登録申請中です。登録されれば以下でインストールできます。</p>
<div class="pygments_murphy"><pre>(ql:quickload &#39;cl-ltsv)
</pre></div>

<h3 id="_2">使い方</h3>
<p>以下のように使います。</p>
<div class="pygments_murphy"><pre>CL-USER&gt; (cl-ltsv:parse-line &quot;host:127.0.0.1    ident:- user:frank&quot;)
((&quot;host&quot; . &quot;127.0.0.1&quot;) (&quot;ident&quot; . &quot;-&quot;) (&quot;user&quot; . &quot;frank&quot;))

CL-USER&gt; (with-input-from-string (ss &quot;host:127.0.0.1    ident:- user:frank
host:127.0.0.1  ident:- user:jane
host:127.0.0.1  ident:- user:john&quot;)
           (cl-ltsv:with-ltsv-from-stream (entry ss)
             (print entry)))

((&quot;host&quot; . &quot;127.0.0.1&quot;) (&quot;ident&quot; . &quot;-&quot;) (&quot;user&quot; . &quot;frank&quot;)) 
((&quot;host&quot; . &quot;127.0.0.1&quot;) (&quot;ident&quot; . &quot;-&quot;) (&quot;user&quot; . &quot;jane&quot;)) 
((&quot;host&quot; . &quot;127.0.0.1&quot;) (&quot;ident&quot; . &quot;-&quot;) (&quot;user&quot; . &quot;john&quot;)) 
NIL

CL-USER&gt; (cl-ltsv:alist-ltsv &#39;((&quot;host&quot; . &quot;127.0.0.1&quot;) (&quot;ident&quot; . &quot;-&quot;) (&quot;user&quot; . &quot;frank&quot;)))
&quot;host:127.0.0.1 ident:- user:frank&quot;
</pre></div>

<ul>
<li>cl-ltsv:parse-lineするとalistを返します</li>
<li>cl-ltsv:with-ltsv-from-stream を使えば1行ずつパースしてループします</li>
<li>cl-ltsv:alist-ltsv でalistからltsv形式の文字列に変換できます</li>
</ul>
<h3 id="_3">まとめ</h3>
<p>ライブラリにするほどでもなかった気はしますが、Common Lispには文字列のsplitが標準でついてなくてちょっと面倒に感じることもあったのでないよりはましかな、ということで作りました。</p>
<p>フィードバック等ありましたらコメント頂けるとうれしいです。</p>]]></content>
  </entry>
</feed>
