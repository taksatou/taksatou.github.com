<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">mojavy.com</title>
  <subtitle type="text"></subtitle>

  <updated>2013-11-17T00:30:57Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://mojavy.com/blog" />
  <id>http://mojavy.com/blog/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://mojavy.com/blog/feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://mojavy.com/blog</uri>
    </author>
    <title type="html"><![CDATA[GoConveyでGoプロジェクトをブラウザからテストする]]></title>
    <link rel="alternate" type="text/html" href="http://mojavy.com/blog/2013/11/17/goconvey/" />
    <id>http://mojavy.com/blog/2013/11/17/goconvey/</id>
    <updated>2013-11-17T00:30:57Z</updated>
    <published>2013-11-17T00:30:57Z</published>
    <category scheme="http://mojavy.com/blog" term="golang" />
    <summary type="html"><![CDATA[GoConveyでGoプロジェクトをブラウザからテストする]]></summary>
    <content type="html" xml:base="http://mojavy.com/blog/2013/11/17/goconvey/"><![CDATA[<p><a href="http://smartystreets.github.io/goconvey/">GoConvey</a> を試してみたらなかなかよかったので紹介します。</p>
<h2 id="_1">目次</h2>
<div class="toc">
<ul>
<li><a href="#_1">目次</a></li>
<li><a href="#goconvey">goconveyとは</a></li>
<li><a href="#_2">クイックスタート</a></li>
<li><a href="#_3">テストを書く</a></li>
<li><a href="#_4">ターミナルから自動テスト</a></li>
<li><a href="#tips">tips</a></li>
<li><a href="#_5">まとめ</a></li>
<li><a href="#_6">その他参考</a></li>
</ul>
</div>
<h2 id="goconvey">goconveyとは</h2>
<p>gopherのためのかっこいいテストツールです。以下のような特徴があります。</p>
<ul>
<li><code>go test</code>をそのまま実行できる</li>
<li>リグレッションテストのための一式</li>
<li>見やすく色付けされた出力</li>
<li>完全に自動化されたWeb UI</li>
<li>テストコードジェネレータ</li>
<li>デスクトップ通知</li>
<li>ターミナル上で動く自動テストスクリプト</li>
<li>Sublime Textとの連携</li>
</ul>
<h2 id="_2">クイックスタート</h2>
<div class="pygments_borland"><pre>$ go get github.com/smartystreets/goconvey # install
$ $GOPATH/bin/goconvey
</pre></div>

<p>上記コマンドを実行して <code>http://localhost:8080</code> にブラウザからWeb UIアクセスすると、goconveyを起動したディレクトリ以下のファイルの更新を自動的に検知してテストを起動してくれます。</p>
<p>Web UIの右上にあるベルのアイコンをクリックすると、デスクトップ通知も有効にできます。</p>
<p>また、テストが失敗した場合はその部分をクリックすることで、Sublime Textで直接そこにジャンプできます。<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
<p>特定のディレクトリ以下のテストを実行しないようにすることもできます。テストに時間がかかるような大きなプロジェクトでも適当に必要なところだけ有効にできるので、ストレスがたまりにくいと思います。</p>
<h2 id="_3">テストを書く</h2>
<p>goconveyのWeb UIは<code>go test</code>で起動できるテストならなんにでも使えますが<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> 、goconveyのテスティングフレームワークをつかうとさらにわかりやすい結果を出力できます。</p>
<div class="pygments_borland"><pre><span class="k">package</span> <span class="n">goconveytest</span>

<span class="k">import</span> <span class="p">(</span>
    <span class="p">.</span> <span class="s">&quot;github.com/smartystreets/goconvey/convey&quot;</span>
    <span class="s">&quot;testing&quot;</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">TestSpec</span><span class="p">(</span><span class="n">t</span> <span class="p">*</span><span class="n">testing</span><span class="p">.</span><span class="n">T</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">var</span> <span class="n">x</span> <span class="nb">int</span>

    <span class="c1">// Only pass t into top-level Convey calls</span>
    <span class="n">Convey</span><span class="p">(</span><span class="s">&quot;Given some integer with a starting value&quot;</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="k">func</span><span class="p">()</span> <span class="p">{</span>
        <span class="n">x</span> <span class="p">=</span> <span class="mi">1</span>

        <span class="n">Convey</span><span class="p">(</span><span class="s">&quot;When the integer is incremented&quot;</span><span class="p">,</span> <span class="k">func</span><span class="p">()</span> <span class="p">{</span>
            <span class="n">x</span><span class="p">++</span>

            <span class="n">Convey</span><span class="p">(</span><span class="s">&quot;The value should be greater by one&quot;</span><span class="p">,</span> <span class="k">func</span><span class="p">()</span> <span class="p">{</span>
                <span class="n">So</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">ShouldEqual</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
            <span class="p">})</span>
        <span class="p">})</span>
    <span class="p">})</span>
<span class="p">}</span>
</pre></div>

<p>Web UIから文章を入力することでテストコードをある程度自動生成することもできます。</p>
<p>BDDスタイルはあんまり得意ではないので詳細は省略します。</p>
<h2 id="_4">ターミナルから自動テスト</h2>
<p>ブラウザなんて立ちあげたくない硬派な人向けにターミナルでファイル監視してテストを起動できるスクリプトも提供されています。
emacsのロックファイルがあると落ちてしまう問題があったのですが、さっきpull requestだしたらすぐマージしてくれました。 <a href="https://github.com/smartystreets/goconvey/pull/88">https://github.com/smartystreets/goconvey/pull/88</a> </p>
<div class="pygments_borland"><pre>$GOPATH/src/github.com/smartystreets/goconvey/scripts/idle.py -v
</pre></div>

<h2 id="tips">tips</h2>
<ul>
<li><code>localhost:8080/latest</code>にアクセスするとjsonでテスト結果がとれます</li>
<li>goconveyのWeb UIは<code>GOPATH</code>以下のパッケージのディレクトリで起動する必要があります (例えば、<code>$GOPATH/src/github.com/yourname/packagename</code>)</li>
</ul>
<h2 id="_5">まとめ</h2>
<p>goconveyを簡単に紹介しました。Web UIだけでも試す価値はあると思います。</p>
<p>ビデオでの解説もあります。ぶっちゃけこの記事を読むより動画を見たほうが早いです。</p>
<iframe width="420" height="315" src="//www.youtube.com/embed/vL_UD1oAF0E" frameborder="0" allowfullscreen></iframe>

<h2 id="_6">その他参考</h2>
<ul>
<li><a href="http://qiita.com/takuan_osho/items/51c8856a3d28145d87bc">http://qiita.com/takuan_osho/items/51c8856a3d28145d87bc</a> </li>
<li><a href="http://blog.satotaichi.info/testingframeworks-for-golang">http://blog.satotaichi.info/testingframeworks-for-golang</a> </li>
</ul>
<div class="footnote">
<hr />
<ol>
<li id="fn:1">
<p>残念なことにemacsやvimには対応していない&#160;<a href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text">&#8617;</a></p>
</li>
<li id="fn:2">
<p>ginkgoやtestifyのテストも実行できます。ただし、ginkgoのテスト結果はデフォルトだとエスケープシーケンスがそのまま表示されてしまいます&#160;<a href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text">&#8617;</a></p>
</li>
</ol>
</div>]]></content>
  </entry>
</feed>
